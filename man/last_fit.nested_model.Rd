% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/last_fit.R
\name{last_fit.nested_model}
\alias{last_fit.nested_model}
\alias{last_fit.nested_models}
\alias{last_fit.nested_workflow}
\alias{last_fit.nested_workflows}
\title{Fit the final best nested model to the training set and evaluate the test set}
\usage{
\method{last_fit}{nested_model}(
  object,
  preprocessor,
  split,
  ...,
  metrics = NULL,
  control = control_nested()
)

\method{last_fit}{nested_models}(
  object,
  preprocessor,
  split,
  ...,
  metrics = NULL,
  control = control_nested()
)

\method{last_fit}{nested_workflow}(object, split, ..., metrics = NULL, control = control_nested())

\method{last_fit}{nested_workflows}(object, split, ..., metrics = NULL, control = control_nested())
}
\arguments{
\item{object}{A 'nested_model', 'nested_models', 'nested_workflow' or
'nested_workflows' object.}

\item{preprocessor}{A model formula, recipe, 'nested_formulas' or
'nested_recipes' object.}

\item{split}{A 'nested_rset' object created using \code{\link[=nested_resamples]{nested_resamples()}} and
\code{\link[rsample:initial_split]{rsample::initial_split()}}.}

\item{...}{Passed directly into \code{\link[tune:last_fit]{tune::last_fit()}}. Currently unused.}

\item{metrics}{A \code{\link[yardstick:metric_set]{yardstick::metric_set()}} or NULL. Passed directly into
\code{\link[tune:last_fit]{tune::last_fit()}}.}

\item{control}{A \code{\link[tune:control_last_fit]{tune::control_last_fit()}} or \code{\link[=control_nested]{control_nested()}} object.
Use \code{\link[=control_nested]{control_nested()}} if you want to customize the fitting process over the
nested data frames and resamples individually.}
}
\description{
\code{last_fit} methods for nested models or workflows. See \code{\link[tune:last_fit]{tune::last_fit()}}.
}
\examples{
data("example_nested_data")

model <- model <- parsnip::svm_rbf(mode = "regression", cost = tune()) \%>\%
  parsnip::set_engine("kernlab") \%>\%
  nested()

recipe <- recipes::recipe(example_nested_data, z ~ x + y + id) \%>\%
  recipes::step_pca(x, y, num_comp = tune::tune()) \%>\%
  step_nest(id)

workflow <- workflows::workflow() \%>\%
  workflows::add_recipe(recipe) \%>\%
  add_model(model)

splits <- nested_resamples(recipe, rsample::initial_split, data, 2)

last_fit(workflow, splits)

}
\seealso{
\code{\link[tune:last_fit]{tune::last_fit()}}
}
