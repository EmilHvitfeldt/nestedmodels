% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.nested_model_fit}
\alias{predict.nested_model_fit}
\title{Nested Model predictions}
\usage{
\method{predict}{nested_model_fit}(object, new_data, type = NULL, opts = list(), ...)
}
\arguments{
\item{object}{An object with class 'nested_model_fit' or
'nested_workflow_fit'}

\item{new_data}{A data frame to make predictions on.}

\item{type}{A singular character vector or NULL. Passed on to
\code{\link[parsnip:predict.model_fit]{parsnip::predict.model_fit()}} or \code{\link[workflows:predict-workflow]{workflows::predict.workflow()}}.}

\item{opts}{A list of optional arguments. Passed on to
\code{\link[parsnip:predict.model_fit]{parsnip::predict.model_fit()}} or \code{\link[workflows:predict-workflow]{workflows::predict.workflow()}}.}

\item{...}{Arguments for the underlying model's predict function. Passed on
to \code{\link[parsnip:predict.model_fit]{parsnip::predict.model_fit()}} or \code{\link[workflows:predict-workflow]{workflows::predict.workflow()}}.}
}
\value{
A data frame of model predictions.
}
\description{
\code{\link[stats:predict]{stats::predict()}} methods for nested models and workflows
}
\examples{
data("example_nested_data")

model <- parsnip::linear_reg() \%>\%
  parsnip::set_engine("lm") \%>\%
  nested()

recipe <- recipes::recipe(example_nested_data, z ~ x + y + id) \%>\%
  step_nest(id)

wf <- workflow() \%>\%
  add_recipe(recipe) \%>\%
  add_model(model)

fitted <- fit(wf, example_nested_data)

predict(fitted, example_nested_data)

}
\seealso{
\code{\link[parsnip:predict.model_fit]{parsnip::predict.model_fit()}} \code{\link[workflows:predict-workflow]{workflows::predict.workflow()}}
}
