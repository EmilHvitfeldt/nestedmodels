% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_resamples.R
\name{nested_resamples}
\alias{nested_resamples}
\title{Create splits on nested data}
\usage{
nested_resamples(
  data,
  resamples,
  nesting_method = NULL,
  size_action = c("truncate", "combine", "combine-random", "recycle", "error"),
  ...
)
}
\arguments{
\item{data}{A data frame.}

\item{nesting_method}{A recipe, workflow or NULL.}

\item{inside}{An expression for the type of resampling to be conducted within
each nest. Passed into \code{\link[rsample:nested_cv]{rsample::nested_cv()}}.}
}
\description{
\code{nested_resamples} allows you to use any rsample split function on nested
data.
}
\details{
\code{nested_resamples} is a wrapper around \code{\link[rsample:nested_cv]{rsample::nested_cv()}}, where the
outside resamples are defined by the nested data frames. This means that if
the inside resampling method reliably produces 10 splits, you will end up
with (10 * the number of nests) splits. This function has been modified to
work with \code{\link[rsample:initial_split]{rsample::initial_split()}} and similar.

If \code{nesting_method} is NULL, \code{data} is assumed to already be nested, and
\code{nested_resamples} will try to find a column that contains nested data
frames.
If \code{nesting_method} is NULL and \code{data} is grouped (using
\code{\link[dplyr:group_by]{dplyr::group_by()}}), the data will be nested (see \code{\link[tidyr:nest]{tidyr::nest()}}) for how
this works).
If \code{nesting_method} is a workflow or recipe, and the recipe has a step created using
\code{\link[=step_nest]{step_nest()}}, \code{data} will be nested using the step in the recipe.
}
\examples{
nested_data <- example_nested_data \%>\%
  tidyr::nest(-id)

grouped_data <- example_nested_data \%>\%
  dplyr::group_by(id)

recipe <- recipes::recipe(example_nested_data, z ~ .) \%>\%
  step_nest(-id)

wf <- workflows::workflow() \%>\%
  workflows::add_recipe(recipe)

nested_resamples(nested_data, rsample::vfold_cv())

nested_resamples(grouped_data, rsample::mc_cv(times = 10))

nested_resamples(example_nested_data, rsample::initial_split(), 
                 nesting_method = recipe)
                 
nested_resamples(example_nested_data, rsample::initial_time_split(prop = 0.6), 
                 nesting_method = workflow)

}
\seealso{
\code{\link[=nested_initial_split]{nested_initial_split()}} for initial splits.
\code{\link[rsample:nested_cv]{rsample::nested_cv()}} for how \code{inside} should be formatted.
}
