% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/show_best.R
\name{show_best.nested_tune_results}
\alias{show_best.nested_tune_results}
\alias{select_best.nested_tune_results}
\alias{select_by_pct_loss.nested_tune_results}
\alias{select_by_one_std_err.nested_tune_results}
\title{Investigate best tuning parameters}
\usage{
\method{show_best}{nested_tune_results}(x, metric = NULL, n = 5, ..., group_nests = FALSE)

\method{select_best}{nested_tune_results}(x, metric = NULL, ..., group_nests = FALSE)

\method{select_by_pct_loss}{nested_tune_results}(x, ..., metric = NULL, limit = 2, group_nests = FALSE)

\method{select_by_one_std_err}{nested_tune_results}(x, ..., metric = NULL, limit = 2, group_nests = FALSE)
}
\arguments{
\item{x}{The results of \code{\link[=tune_nested]{tune_nested()}}.}

\item{metric}{A character vector. Passed onto the corresponding tune
functions.}

\item{n}{A numeric vector. Passed onto the corresponding tune functions.}

\item{...}{Passed on to the corresponding tune functions.}

\item{group_nests}{A logical vector. Decides how the best results are
selected (see Details).}

\item{limit}{Passed onto \code{\link[tune:show_best]{tune::select_by_pct_loss()}}.}
}
\description{
These methods allow you to select the best tune results in different ways.
}
\details{
\code{group_nests} provides two methods of selecting the best model
hyperparameters for nested models.
When \code{group_nests} is FALSE, the default, the functions use every row of the
tuning results to figure out the best set of parameters for \emph{all} of the
data. When \code{group_nests} is TRUE, the functions use the rows for each unique
'nest_id' value to find the best set of parameters for each nested data
frame. Essentially, the corresponding tune functions are run on each group
and combined into a single data frame, the groups in this case being the
results corresponding to each nested data frame.

When using a \verb{select_*} function with \code{group_nests = TRUE}, instead of ending
up with a single set of parameters, you end up with multiple, one for each
nested data frame. If you want to use the result to finalize a model, recipe
or workflow, you have to use \code{\link[=finalize_nested_model]{finalize_nested_model()}} or similar, rather
than their 'tune' counterparts.

Generally, \code{group_nests} should be left as FALSE. This means you don't have
to use \code{\link[=finalize_nested_model]{finalize_nested_model()}} and similar, using the default tune
counterparts instead. Also, tuning a model for every single nest is not
scalable for large numbers of nested data frames, and storing a model for
each nested data frame scales similarly badly. Finally, this method does not
work with workflowsets.
}
\examples{
data("example_nested_tune_results")

select_best(example_nested_tune_results)
select_best(example_nested_tune_results, group_nests = TRUE)

}
\seealso{
\code{\link[tune:show_best]{tune::show_best()}}
}
