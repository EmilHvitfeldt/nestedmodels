% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_workflow.R
\name{nested_workflow}
\alias{nested_workflow}
\alias{add_nested_model}
\title{Add a nested model to a workflow}
\usage{
nested_workflow(preprocessor = NULL, spec = NULL)

add_nested_model(x, spec, ..., formula = NULL)
}
\arguments{
\item{preprocessor}{Optional. Passed on to \code{\link[workflows:workflow]{workflows::workflow()}}.}

\item{spec}{An optional object of class 'nested_model' or 'model_spec'.}

\item{x}{A workflow.}

\item{...}{Passed onto \code{\link[workflows:add_model]{workflows::add_model()}}}

\item{formula}{Passed onto \code{\link[workflows:add_model]{workflows::add_model()}}}
}
\value{
A 'nested_workflow' or 'workflow' object.
}
\description{
When a nested model is added to a workflow, the resulting class of the
workflow should be 'nested_workflow'. There are three methods to create
such an object (see Examples).
}
\details{
Note that \code{add_nested_model()} is \emph{not} a shortcut for
\code{workflows::add_model() \%>\% nested()}.
The result is only a \code{nested_workflow} if \code{spec} is a nested model.
Otherwise, the result is a normal workflow.
\code{nested_workflow()}, on the other hand, \emph{is} a shortcut for
\code{workflows::workflow() \%>\% nested()}.
If you are not sure whether a workflow is nested or not, use \code{\link[=is_nested]{is_nested()}}.
}
\examples{
# There are 3 ways to create a nested workflow

model <- parsnip::linear_reg()
nested_model <- model \%>\% nested()
unused_formula <- x ~ y

# 1
nested_workflow(spec = model)
nested_workflow() \%>\%
  add_model(model)
nested_workflow() \%>\%
  add_model(nested_model)

# 2
workflows::workflow() \%>\%
  add_nested_model(nested_model)
workflows::workflow() \%>\%
  add_nested_model(model) \%>\%
  is_nested()  # FALSE

# 3
workflows::workflow() \%>\%
  add_model(model) \%>\%
  nested()
workflows::workflow(spec = model) \%>\%
  nested()

}
