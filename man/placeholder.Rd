% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested.R
\name{placeholder}
\alias{placeholder}
\title{Create a Nested Model}
\arguments{
\item{object}{A model spec, workflow, or list of such.}

\item{...}{Not used}
}
\value{
A model spec with class "nested_model"
For \code{is_nested}, a logical vector of length 1.
}
\description{
\code{nested()} turns a model or workflow (fitted or unfitted) into a nested
model/workflow.
\code{is_nested()} checks if a model or workflow is nested.
}
\examples{
model <-
  linear_reg() \%>\%
  set_engine("lm") \%>\%
  nested()

model

is_nested(model)

wf <-
  workflow() \%>\%
  add_model(model)


is_nested(wf)

nested <- function(object, ...) UseMethod("nested")

nested.model_spec <- function(object, ...) new_nested_model(object)

nested.workflow <- function(object, ...) new_nested_workflow(object)

nested.list <- function(object, ...) {
  if (purrr::every(object, inherits, "model_spec")) {
    new_nested_models(object)
  } else if (purrr::every(object, inherits, "workflow")) {
    new_nested_workflows(object)
  } else if (purrr::every(object, inherits, "formula")) {
    new_nested_formulas(object)
  } else if (purrr::every(object, inherits, "recipe")) {
    new_nested_recipes(object)
  } else {
    NextMethod()
  }
}

nested.nested_model <- function(object, ...) object

nested.nested_workflow <- function(object, ...) object

nested.nested_models <- function(object, ...) object

nested.nested_workflows <- function(object, ...) object

nested.default <- function(object) {
  msg <- glue::glue("no applicable method for 'nested' applied to an object of class \"{class(object)}\"")
  rlang::abort(msg)
}

}
